// ==========================================
// MODULE ANALYSE IA GEMINI‚Ñ¢
// √Ä int√©grer dans public/beta-combined-dashboard.html
// ==========================================

/**
 * √âTAPE 1: Ajouter les states dans JStocksTab (apr√®s les √©tats existants)
 */
const STATES_AI_ANALYSIS = `
// √âtats pour l'analyse IA Gemini
const [aiAnalysis, setAiAnalysis] = useState(null);
const [loadingAiAnalysis, setLoadingAiAnalysis] = useState(false);

// Option pour inclure la watchlist
const [includeWatchlist, setIncludeWatchlist] = useState(false);
`;

/**
 * √âTAPE 2: Modifier la liste des stocks pour inclure la watchlist
 */
const MODIFY_STOCKS_LIST = `
// Modifier la const stocks existante :
const baseStocks = [
    { symbol: 'AAPL', name: 'Apple Inc.' },
    { symbol: 'MSFT', name: 'Microsoft Corp.' },
    { symbol: 'GOOGL', name: 'Alphabet Inc.' },
    { symbol: 'AMZN', name: 'Amazon.com Inc.' },
    { symbol: 'META', name: 'Meta Platforms Inc.' },
    { symbol: 'TSLA', name: 'Tesla Inc.' },
    { symbol: 'NVDA', name: 'NVIDIA Corp.' },
    { symbol: 'NFLX', name: 'Netflix Inc.' },
    { symbol: 'AMD', name: 'Advanced Micro Devices' },
    { symbol: 'INTC', name: 'Intel Corp.' }
];

// Ajouter les titres de la watchlist si l'option est coch√©e
const stocks = includeWatchlist 
    ? [...baseStocks, ...watchlistTickers.map(ticker => ({ symbol: ticker, name: ticker }))]
    : baseStocks;
`;

/**
 * √âTAPE 3: Fonction generateAiAnalysis
 * √Ä placer apr√®s fetchRealStockData
 */
const FUNCTION_GENERATE_AI_ANALYSIS = `
// Fonction pour g√©n√©rer l'analyse IA avec Gemini
const generateAiAnalysis = async (stockData) => {
    if (!stockData) return;
    
    setLoadingAiAnalysis(true);
    try {
        const symbol = stockData.quote?.symbol || selectedStock;
        
        // Pr√©parer toutes les donn√©es pour Gemini
        const dataForAI = {
            symbol: symbol,
            company: stockData.profile?.companyName || symbol,
            sector: stockData.profile?.sector || 'N/A',
            
            // Prix et variation
            currentPrice: stockData.quote?.price,
            change: stockData.quote?.change,
            changePercent: stockData.quote?.changesPercentage,
            
            // Score JSLAI
            jslaiScore: stockData.jslaiScore?.total,
            jslaiInterpretation: stockData.jslaiScore?.interpretation,
            jslaiRecommendation: stockData.jslaiScore?.recommendation,
            jslaiBreakdown: stockData.jslaiScore?.breakdown,
            
            // Ratios financiers
            peRatio: stockData.ratios?.peRatio,
            pegRatio: stockData.ratios?.pegRatio,
            roe: stockData.ratios?.roe,
            roa: stockData.ratios?.roa,
            debtEquity: stockData.ratios?.debtEquity,
            currentRatio: stockData.ratios?.currentRatio,
            profitMargin: stockData.ratios?.profitMargin,
            
            // M√©triques avanc√©es
            financialStrength: stockData.advancedMetrics?.financialStrength,
            earningPredictability: stockData.advancedMetrics?.earningPredictability,
            peVsHistorical: stockData.advancedMetrics?.peVsHistorical,
            priceFCFVsHistorical: stockData.advancedMetrics?.priceFCFVsHistorical,
            performanceSinceLow: stockData.advancedMetrics?.performanceSinceLow,
            
            // RSI et momentum
            rsi14: stockData.rsi?.rsi14,
            rsi2: stockData.rsi?.rsi2,
            
            // Moyennes mobiles
            sma20Diff: stockData.movingAverages?.sma20?.diff,
            sma50Diff: stockData.movingAverages?.sma50?.diff,
            sma200Diff: stockData.movingAverages?.sma200?.diff,
            maTrend: stockData.movingAverages?.interpretation?.trend,
            
            // Sentiment
            sentiment: stockData.sentiment?.overall,
            sentimentScore: stockData.sentiment?.score
        };
        
        // Appeler l'API Gemini
        const response = await fetch('/api/gemini/chat', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                messages: [{
                    role: 'user',
                    content: \`En tant qu'analyste financier expert francophone, g√©n√®re une analyse d√©taill√©e et professionnelle du titre \${symbol}.

**DONN√âES DISPONIBLES:**
\${JSON.stringify(dataForAI, null, 2)}

**STRUCTURE DEMAND√âE:**

## 1. üìä Synth√®se Executive
- Situation actuelle en 2-3 phrases
- Recommandation claire (Achat/Conserver/Vendre)

## 2. üéØ Analyse du Score JSLAI‚Ñ¢ (\${dataForAI.jslaiScore}/100)
- Interpr√©tation du score global
- Forces identifi√©es dans les composantes
- Faiblesses √† surveiller
- Coh√©rence avec la valorisation de march√©

## 3. üíé Analyse Fondamentale
### Valorisation
- P/E Ratio: \${dataForAI.peRatio} (vs historique: \${dataForAI.peVsHistorical?.diff?.toFixed(1)}%)
- Price/FCF vs historique: \${dataForAI.priceFCFVsHistorical?.diff?.toFixed(1)}%
- Conclusion sur la valorisation

### Rentabilit√©
- ROE: \${dataForAI.roe}%
- ROA: \${dataForAI.roa}%
- Marge nette: \${dataForAI.profitMargin}%
- Qualit√© des b√©n√©fices

### Solidit√© Financi√®re
- Score de force financi√®re: \${dataForAI.financialStrength}/100
- Pr√©visibilit√© des b√©n√©fices: \${dataForAI.earningPredictability}/100
- Interpr√©tation de la sant√© du bilan

## 4. üìà Analyse Technique
- RSI(14): \${dataForAI.rsi14} ‚Üí Interpr√©tation
- Moyennes mobiles: \${dataForAI.maTrend}
- Momentum g√©n√©ral et tendance
- Performance depuis le plus bas 5 ans: \${dataForAI.performanceSinceLow?.toFixed(1)}%

## 5. ‚ö° Opportunit√©s et Risques
### Opportunit√©s (3 principales)
1. [√Ä identifier selon les donn√©es]
2. [√Ä identifier selon les donn√©es]
3. [√Ä identifier selon les donn√©es]

### Risques (3 principaux)
1. [√Ä identifier selon les donn√©es]
2. [√Ä identifier selon les donn√©es]
3. [√Ä identifier selon les donn√©es]

## 6. üí° Recommandation Finale
- Position sugg√©r√©e: [Achat Fort/Achat/Conserver/Vendre]
- Justification bas√©e sur l'analyse
- Horizon d'investissement recommand√©
- Prix cible sugg√©r√© (optionnel, si pertinent)

**STYLE:**
- Professionnel et concis
- Bas√© UNIQUEMENT sur les donn√©es fournies
- Utiliser des √©mojis pour la lisibilit√©
- Fran√ßais de qualit√©, style CFA
- √ätre franc sur les limites (pas de sp√©culation)
\`
                }],
                temperature: 0.7,
                maxTokens: 2500
            })
        });
        
        if (!response.ok) {
            const errorData = await response.json().catch(() => ({}));
            throw new Error(\`Erreur API Gemini: \${response.status} - \${errorData.error || response.statusText}\`);
        }
        
        const data = await response.json();
        const analysisText = data.response || data.text || data.candidates?.[0]?.content || 'Analyse non disponible';
        
        setAiAnalysis({
            text: analysisText,
            timestamp: new Date(),
            symbol: symbol
        });
        
        console.log('‚úÖ Analyse IA g√©n√©r√©e avec succ√®s pour', symbol);
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la g√©n√©ration de l\\'analyse IA:', error);
        setAiAnalysis({
            text: \`‚ö†Ô∏è **Analyse IA temporairement indisponible**

Impossible de g√©n√©rer l'analyse automatique pour le moment.

**Raisons possibles:**
- Cl√© API Gemini non configur√©e ou invalide
- Quota API d√©pass√©
- Probl√®me de connexion r√©seau
- Service temporairement indisponible

**Solution:**
1. V√©rifiez votre cl√© API Gemini dans l'onglet Admin-JSLAI
2. Consultez la console pour plus de d√©tails
3. R√©essayez dans quelques instants

**Erreur technique:** \${error.message}\`,
            timestamp: new Date(),
            symbol: selectedStock,
            error: true
        });
    } finally {
        setLoadingAiAnalysis(false);
    }
};
`;

/**
 * √âTAPE 4: Modifier le useEffect pour appeler generateAiAnalysis
 */
const MODIFY_USEEFFECT = `
// Dans useEffect de chargement des donn√©es, apr√®s setStockDataIntelli(realData)
// Ajouter :
console.log('ü§ñ G√©n√©ration de l\\'analyse IA avec Gemini...');
generateAiAnalysis(realData);
`;

/**
 * √âTAPE 5: UI - Checkbox "Inclure Watchlist"
 * √Ä placer apr√®s le select de s√©lection de titre
 */
const UI_CHECKBOX_WATCHLIST = `
{/* Checkbox pour inclure la watchlist */}
<label className={\`flex items-center gap-1.5 px-2 py-1 rounded text-xs cursor-pointer transition-colors \${
    isDarkMode ? 'bg-neutral-800 hover:bg-neutral-700 text-gray-300' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'
}\`}>
    <input
        type="checkbox"
        checked={includeWatchlist}
        onChange={(e) => setIncludeWatchlist(e.target.checked)}
        className="cursor-pointer"
    />
    <span>+ Watchlist ({watchlistTickers.length})</span>
</label>
`;

/**
 * √âTAPE 6: UI - Section Analyse IA
 * √Ä placer avant le footer de JStocksTab
 */
const UI_ANALYSIS_SECTION = `
{/* Analyse IA Gemini‚Ñ¢ - Section d√©di√©e */}
<div className={\`mt-2 border rounded-lg p-3 transition-colors duration-300 \${
    isDarkMode ? 'bg-gradient-to-br from-purple-900/20 to-blue-900/20 border-purple-800' : 'bg-gradient-to-br from-purple-50 to-blue-50 border-purple-300'
}\`}>
    <div className="flex items-center justify-between mb-2">
        <h3 className="text-sm font-bold flex items-center gap-2">
            <span className="text-xl">ü§ñ</span>
            <span className={isDarkMode ? 'text-white' : 'text-gray-900'}>
                Analyse IA par Gemini‚Ñ¢
            </span>
            {loadingAiAnalysis && (
                <span className="text-xs text-blue-500 animate-pulse">‚ö° G√©n√©ration en cours...</span>
            )}
        </h3>
        <button
            onClick={() => generateAiAnalysis(stockDataIntelli)}
            disabled={loadingAiAnalysis || !stockDataIntelli}
            className={\`px-3 py-1 text-xs rounded font-semibold transition-colors \${
                loadingAiAnalysis || !stockDataIntelli
                    ? 'bg-gray-400 cursor-not-allowed text-gray-600'
                    : 'bg-purple-600 hover:bg-purple-700 text-white'
            }\`}
        >
            üîÑ R√©g√©n√©rer
        </button>
    </div>
    
    <div className={\`border rounded p-3 max-h-96 overflow-y-auto \${
        isDarkMode ? 'bg-neutral-900 border-neutral-800' : 'bg-white border-gray-200'
    }\`}>
        {loadingAiAnalysis ? (
            <div className="text-center py-8">
                <div className="text-4xl mb-2 animate-bounce">ü§ñ</div>
                <div className={\`text-sm font-semibold \${isDarkMode ? 'text-gray-300' : 'text-gray-700'}\`}>
                    Gemini analyse {selectedStock}...
                </div>
                <div className="text-xs text-gray-500 mt-1">
                    Cela peut prendre 10-15 secondes
                </div>
                <div className="mt-4 flex justify-center">
                    <div className="w-48 h-1 bg-gray-200 rounded-full overflow-hidden">
                        <div className="h-full bg-purple-600 animate-pulse" style={{animation: 'pulse 1.5s ease-in-out infinite'}}></div>
                    </div>
                </div>
            </div>
        ) : aiAnalysis ? (
            <div className={\`prose prose-sm max-w-none \${
                isDarkMode ? 'prose-invert' : ''
            } \${aiAnalysis.error ? 'text-red-500' : ''}\`}>
                <div 
                    className={\`\${isDarkMode ? 'text-gray-200' : 'text-gray-800'}\`}
                    dangerouslySetInnerHTML={{ 
                        __html: aiAnalysis.text
                            .replace(/\*\*(.*?)\*\*/g, '<strong class="font-bold">$1</strong>')
                            .replace(/^#{1,3}\\s+(.*?)$/gm, '<h3 class="font-bold text-base mt-4 mb-2">$1</h3>')
                            .replace(/^-\\s+(.*?)$/gm, '<li class="ml-4">$1</li>')
                            .replace(/(<li>.*<\\/li>)/gs, '<ul class="list-disc pl-5 space-y-1 my-2">$1</ul>')
                            .replace(/\\n\\n/g, '<br/><br/>')
                            .replace(/^###\\s+(.*?)$/gm, '<h4 class="font-semibold text-sm mt-3 mb-1">$1</h4>')
                    }} 
                />
                <div className={\`text-xs mt-4 pt-2 border-t \${
                    isDarkMode ? 'text-gray-500 border-gray-800' : 'text-gray-400 border-gray-200'
                }\`}>
                    üìÖ G√©n√©r√© le {aiAnalysis.timestamp.toLocaleString('fr-FR', {
                        day: 'numeric',
                        month: 'long',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    })} pour <strong>{aiAnalysis.symbol}</strong>
                </div>
            </div>
        ) : (
            <div className="text-center py-8">
                <div className="text-4xl mb-2">üí°</div>
                <div className={\`text-sm \${isDarkMode ? 'text-gray-300' : 'text-gray-700'}\`}>
                    S√©lectionnez un titre pour voir l'analyse IA
                </div>
                <div className="text-xs text-gray-500 mt-1">
                    L'analyse se g√©n√®re automatiquement √† chaque changement de titre
                </div>
                <div className={\`mt-3 text-xs \${isDarkMode ? 'text-gray-600' : 'text-gray-500'}\`}>
                    Propuls√© par Gemini‚Ñ¢ - Analyse bas√©e sur {Object.keys(stockDataIntelli || {}).length}+ points de donn√©es
                </div>
            </div>
        )}
    </div>
</div>
`;

console.log('ü§ñ Module Analyse IA Gemini‚Ñ¢ pr√™t');
console.log('üìä Inclut: √âtats + Fonction + UI + Checkbox Watchlist');
