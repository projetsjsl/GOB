/**
 * Debug FMP URL
 * Affiche l'URL exacte utilis√©e par notre API
 */

const debugFmpUrl = async () => {
  console.log('üîç DEBUG FMP URL');
  console.log('================');
  console.log('');

  // Test 1: V√©rifier l'URL construite par notre code
  console.log('üìã √âTAPE 1: V√©rification de l\'URL Construite');
  console.log('---------------------------------------------');
  
  const FMP_API_KEY = 'Yo1RJiZ6G5JLEMmTzhGpusq78aIWhiyt';
  const endpoint = '/profile?symbol=AAPL';
  const baseUrl = 'https://financialmodelingprep.com/stable';
  const separator = endpoint.includes('?') ? '&' : '?';
  const url = `${baseUrl}${endpoint}${separator}apikey=${FMP_API_KEY}`;
  
  console.log('URL construite:', url);
  console.log('');

  // Test 2: Tester cette URL
  console.log('üîå √âTAPE 2: Test de l\'URL Construite');
  console.log('------------------------------------');
  
  try {
    const response = await fetch(url);
    const data = await response.json();
    
    console.log('Status HTTP:', response.status);
    if (response.ok) {
      console.log('‚úÖ URL fonctionnelle !');
      console.log('Donn√©es re√ßues:', data.length, '√©l√©ments');
      if (data.length > 0) {
        console.log('Symbol:', data[0].symbol);
        console.log('Price:', data[0].price);
        console.log('Market Cap:', data[0].marketCap);
      }
    } else {
      console.log('‚ùå URL non fonctionnelle');
      console.log('R√©ponse:', JSON.stringify(data, null, 2));
    }
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }
  console.log('');

  // Test 3: Comparer avec l'URL qui fonctionne
  console.log('üîç √âTAPE 3: Comparaison avec l\'URL qui Fonctionne');
  console.log('--------------------------------------------------');
  
  const workingUrl = 'https://financialmodelingprep.com/stable/profile?symbol=AAPL&apikey=Yo1RJiZ6G5JLEMmTzhGpusq78aIWhiyt';
  console.log('URL qui fonctionne:', workingUrl);
  console.log('URL construite:   ', url);
  console.log('URLs identiques:  ', url === workingUrl ? '‚úÖ Oui' : '‚ùå Non');
  console.log('');

  // Test 4: V√©rifier la cl√© API dans Vercel
  console.log('üîë √âTAPE 4: V√©rification de la Cl√© API dans Vercel');
  console.log('--------------------------------------------------');
  
  try {
    const response = await fetch('https://gobapps.com/api/unified-serverless?endpoint=test-env');
    const data = await response.json();
    
    if (data.success) {
      console.log('Variables d\'environnement Vercel:');
      console.log(JSON.stringify(data.environment, null, 2));
      
      if (data.environment.FMP_API_KEY === '‚úÖ Configur√©e') {
        console.log('‚úÖ FMP_API_KEY est configur√©e dans Vercel');
        console.log('‚ùì Mais elle ne fonctionne pas - v√©rifier la valeur exacte');
      } else {
        console.log('‚ùå FMP_API_KEY n\'est pas configur√©e dans Vercel');
      }
    }
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }
  console.log('');

  // Test 5: Recommandations
  console.log('üéØ √âTAPE 5: Recommandations');
  console.log('---------------------------');
  
  console.log('üîß SOLUTIONS POSSIBLES:');
  console.log('');
  console.log('1. V√âRIFIER LA VALEUR EXACTE DE LA CL√â DANS VERCEL:');
  console.log('   - Aller dans Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables');
  console.log('   - V√©rifier que FMP_API_KEY = Yo1RJiZ6G5JLEMmTzhGpusq78aIWhiyt');
  console.log('   - V√©rifier qu\'il n\'y a pas d\'espaces en d√©but/fin');
  console.log('');
  console.log('2. RED√âPLOYER APR√àS V√âRIFICATION:');
  console.log('   - Toute modification des variables n√©cessite un red√©ploiement');
  console.log('   - Dans Vercel Dashboard ‚Üí Deployments ‚Üí Redeploy');
  console.log('');
  console.log('3. V√âRIFIER LES LOGS VERCEL:');
  console.log('   - Aller dans Vercel Dashboard ‚Üí Functions ‚Üí View Function Logs');
  console.log('   - Chercher les erreurs li√©es √† FMP');
  console.log('   - V√©rifier l\'URL exacte appel√©e');
  console.log('');

  console.log('üìä R√âSUM√â:');
  console.log('==========');
  console.log('‚úÖ URL construite correctement');
  console.log('‚úÖ Endpoint /profile fonctionnel');
  console.log('‚úÖ Cl√© API fonctionnelle');
  console.log('‚ùå Probl√®me avec la cl√© API dans Vercel');
  console.log('');
  console.log('üéØ Le probl√®me vient de la configuration Vercel, pas du code !');
};

// Ex√©cuter si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  debugFmpUrl().catch(console.error);
}

export { debugFmpUrl };
