/**
 * Test des Variables d'Environnement sur Vercel
 * V√©rifie si les variables d'environnement sont accessibles
 */

const testEnvVariables = async () => {
  console.log('üîë TEST DES VARIABLES D\'ENVIRONNEMENT VERCEL');
  console.log('==============================================');
  console.log('');

  // Test 1: V√©rifier si notre API peut acc√©der aux variables d'environnement
  console.log('üìã √âTAPE 1: Test d\'Acc√®s aux Variables d\'Environnement');
  console.log('-------------------------------------------------------');
  
  try {
    // Cr√©er un endpoint de test temporaire pour v√©rifier les variables d'environnement
    const response = await fetch('https://gobapps.com/api/unified-serverless?endpoint=test-env');
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Variables d\'environnement accessibles');
      console.log('R√©ponse:', JSON.stringify(data, null, 2));
    } else {
      console.log('‚ùå Impossible d\'acc√©der aux variables d\'environnement');
      console.log('Status:', response.status);
    }
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }
  console.log('');

  // Test 2: V√©rifier la configuration FMP sp√©cifiquement
  console.log('üîå √âTAPE 2: Test de Configuration FMP');
  console.log('-------------------------------------');
  
  try {
    const response = await fetch('https://gobapps.com/api/unified-serverless?endpoint=fmp&symbol=AAPL&action=quote');
    const data = await response.json();
    
    console.log('Status HTTP:', response.status);
    console.log('R√©ponse:', JSON.stringify(data, null, 2));
    
    if (data.details && data.details.includes('FMP_API_KEY not configured')) {
      console.log('');
      console.log('üö® PROBL√àME IDENTIFI√â: Variable FMP_API_KEY non configur√©e');
      console.log('üîß SOLUTION:');
      console.log('1. Aller dans Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables');
      console.log('2. Ajouter FMP_API_KEY avec votre cl√© API');
      console.log('3. Red√©ployer le projet');
    } else if (data.details && data.details.includes('403')) {
      console.log('');
      console.log('üö® PROBL√àME IDENTIFI√â: Cl√© API FMP invalide');
      console.log('üîß SOLUTION:');
      console.log('1. V√©rifier la cl√© API sur https://financialmodelingprep.com');
      console.log('2. Tester la cl√© directement');
      console.log('3. Mettre √† jour la cl√© dans Vercel si n√©cessaire');
    }
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }
  console.log('');

  // Test 3: V√©rifier d'autres APIs pour comparaison
  console.log('üîç √âTAPE 3: Test d\'Autres APIs pour Comparaison');
  console.log('-----------------------------------------------');
  
  const otherApis = [
    { name: 'Marketaux', endpoint: 'marketaux', params: 'symbol=AAPL&limit=1' },
    { name: 'Gemini', endpoint: 'gemini-chat', params: '' }
  ];

  for (const api of otherApis) {
    try {
      console.log(`  üîÑ Test ${api.name}...`);
      const url = `https://gobapps.com/api/unified-serverless?endpoint=${api.endpoint}&${api.params}`;
      const response = await fetch(url);
      const data = await response.json();
      
      if (response.ok && !data.error) {
        console.log(`    ‚úÖ ${api.name}: Fonctionnel`);
      } else {
        console.log(`    ‚ùå ${api.name}: ${data.error || 'Erreur inconnue'}`);
      }
    } catch (error) {
      console.log(`    ‚ùå ${api.name}: ${error.message}`);
    }
  }
  console.log('');

  // Test 4: Recommandations sp√©cifiques
  console.log('üéØ √âTAPE 4: Recommandations Sp√©cifiques');
  console.log('---------------------------------------');
  
  console.log('üîß POUR R√âSOUDRE LE PROBL√àME FMP:');
  console.log('');
  console.log('1. V√âRIFIER LA VARIABLE D\'ENVIRONNEMENT:');
  console.log('   - Aller sur https://vercel.com/dashboard');
  console.log('   - S√©lectionner le projet GOB');
  console.log('   - Settings ‚Üí Environment Variables');
  console.log('   - V√©rifier que FMP_API_KEY est pr√©sente');
  console.log('   - V√©rifier qu\'elle n\'a pas d\'espaces en d√©but/fin');
  console.log('');
  console.log('2. V√âRIFIER LA CL√â API FMP:');
  console.log('   - Aller sur https://financialmodelingprep.com');
  console.log('   - Se connecter √† votre compte');
  console.log('   - V√©rifier que la cl√© est active');
  console.log('   - Tester avec: https://financialmodelingprep.com/stable/quote/AAPL?apikey=VOTRE_CLE');
  console.log('');
  console.log('3. RED√âPLOYER APR√àS MODIFICATION:');
  console.log('   - Toute modification des variables d\'environnement n√©cessite un red√©ploiement');
  console.log('   - Dans Vercel Dashboard ‚Üí Deployments ‚Üí Redeploy');
  console.log('');

  console.log('üìä R√âSUM√â:');
  console.log('==========');
  console.log('Le code utilise correctement process.env.FMP_API_KEY');
  console.log('Le probl√®me vient soit de:');
  console.log('1. Variable d\'environnement non configur√©e dans Vercel');
  console.log('2. Cl√© API FMP invalide ou expir√©e');
  console.log('3. Compte FMP avec limitations');
};

// Ex√©cuter si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  testEnvVariables().catch(console.error);
}

export { testEnvVariables };
